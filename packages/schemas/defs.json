{
  "$id":
    "https://raw.githubusercontent.com/Ouest-France/platform/master/packages/schemas/defs.json",
  "definitions": {
    "Labels": {
      "type": "array",
      "title": "Labels",
      "description":
        "Labels are key/value pairs that are attached to objects, such as BlockConfig. Labels are intended to be used to specify identifying attributes of objects that are meaningful and relevant to users, but do not directly imply semantics to the core system. Labels can be used to organize and to select subsets of objects. Labels can be attached to objects at creation time and subsequently added and modified at any time. Each object can have a set of key/value labels defined. Each Key must be unique for a given object.",
      "example":
        "\"release\" : \"stable\", \"release\" : \"canary\"\n\"service\":\"meteo\", \"service\":\"cinema\"",
      "items": {
        "$ref": "#/definitions/Label"
      }
    },
    "Label": {
      "type": "object",
      "additionalProperties": false,
      "title": "Label",
      "description":
        "A label is a key/value pair intended to be used to specify identifying attributes that are meaningful and relevant to users.",
      "properties": {
        "key": {
          "$ref": "#/definitions/Ident"
        },
        "value": {
          "$ref": "#/definitions/LabelValue"
        }
      },
      "required": ["key", "value"]
    },
    "Ident": {
      "type": "string",
      "pattern": "^[a-z-]+$",
      "minLength": 3,
      "maxLength": 50
    },
    "LabelValue": {
      "type": "string",
      "minLength": 3,
      "maxLength": 50
    },
    "BasicSemVer": {
      "type": "string",
      "title": "Basic Semantic version",
      "description": "MAJOR.MINOR.PATCH, see https://semver.org/",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
      "examples": ["0.0.1", "1.0.0"]
    },
    "BlockName": {
      "type": "string",
      "title": "Identifiant fonctionnel décrivant le Block",
      "description": "Cet identifiant est unique au sein du CMS",
      "default": "",
      "examples": [
        "editorial/article--list",
        "editorial/article--detail",
        "meteo/meteo--detail"
      ]
    },
    "UIRepresentationPropertyConfiguration": {
      "description": "Extend ui configuration field with pure UserInterface representation configuration (exemple specify placeholder from standard component, use slider component to set number instead simple number input, use color picker component to set string or yet use external widget).",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "oneOf": [
        {
          "required": ["widget"],
          "not": {"required": ["component"]}
        },
        {
          "required": ["component"],
          "not": {"required": ["widget"]}
        }
      ],
      "properties": {
        "widget": {
          "description": "Specify widget to use. Widget is similar to a component except it is owned by a BlockProvider and is not part of the standard components available in the platform.",
          "additionalProperties": false,
          "required": ["name", "version"],
          "properties": {
            "name": {
              "type": "string",
              "description": "name of widget to use for this configuration field."
            },
            "version": {
              "type": "string",
              "description": "version of widget."
            }
          }
        },
        "component": {
          "description": "Allow to extend component configuration with representation parameters (example: placeholder) or to use another component than the default one.",
          "additionalProperties": false,
          "minProperties": 1,
          "properties": {
            "name": {
              "type": "string",
              "enum": [ "slider" ],
              "description": "name of component to use for this configuration field (example: slider)"
            }
          }
        }
      }
    },
    "UIProperty": {
      "type": "object",
      "required": ["type", "description", "title"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "basic type of configuration field",
          "anyOf": [
            {
              "$ref": "#/definitions/UIPropertyBasicTypes"
            }
          ]
        },
        "title": {
          "description": "Label of configuration field",
          "type": "string"
        },
        "description": {
          "description": "description of configuration field",
          "type": "string"
        },
        "maximum": {
          "type": "number"
        },
        "minimum": {
          "type": "number"
        },
        "maxLength": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
        },
        "minLength": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": [ "string", "number" ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "format": {
          "description": "subset of html input type to describe input behavior",
          "anyOf": [
            {
              "$ref": "#/definitions/UIInputFormat"
            }
          ]
        },
        "x-ui-configuration": { "$ref": "#/definitions/UIRepresentationPropertyConfiguration" },
        "default": {}
      },
      "dependencies": {
        "minimum": {
          "properties": {
            "type": {
              "enum": ["number"]
            }
          }
        },
        "maximum": {
          "properties": {
            "type": {
              "enum": ["number"]
            }
          }
        },
        "maxLength": {
          "properties": {
            "type": {
              "enum": ["string"]
            }
          }
        },
        "format": {
          "properties": {
            "type": {
              "enum": ["string"]
            }
          }
        },
        "enum": {
          "properties": {
            "type": {
              "enum": ["string", "number"]
            }
          }
        },
        "pattern": {
          "properties": {
            "type": {
              "enum": ["string"]
            }
          }
        },
        "minLength": {
          "properties": {
            "type": {
              "enum": ["string"]
            }
          }
        }
      },
      "oneOf": [
        {
          "properties": {
            "type": {"enum": ["boolean"] }
          }
        },
        {
          "properties": {
            "type": {"enum": ["string"] }
          },
          "required": ["minLength", "maxLength"]
        },
        {
          "properties": {
            "type": {"enum": ["number"] }
          },
          "required": ["minimum", "maximum"]
        }
      ]
    },
    "BlockType": {
      "$id": "/properties/type",
      "type": "string",
      "title": "Type de Block",
      "description":
        "BlockType est un union type ayant pour valeur : Display ou Navigation.\nLes Blocks dans le CMS peuvent être catégorisé selon la typologie suivante :\n- Navigation : Block dynamique avec action utilisateur nécessitant un rechargement de la page. Ex : formulaire de recherche, pagination sur un Block d'actualité, etc.\n- Display : Block statique sans interaction avec l’utilisateur (son état ne change pas en fonction de l'URL, son état dépend uniquement de ses paramètres de configuration)",
      "enum": ["Navigation", "Display"]
    },
    "BlockTemplateEngine": {
      "type": "string",
      "title": "Template engine",
      "description":
        "The template engine to use to render this Block. *twig* is deprecated, always use 'mustache' instead, see: https://mustache.github.io",
      "enum": ["twig", "mustache", "php-twig"]
    },
    "UIPropertyBasicTypes": {
      "enum": [ "number", "string", "boolean" ]
    },
    "UIInputFormat": {
      "enum": [ "email", "text", "date" ]
    },
    "UISection": {
      "type": "object",
      "title": "UI configuration contract group",
      "description": "Define configuration set contract",
      "required": [ "properties", "title" ],
      "properties": {
        "title": {
          "description": "Title of form tab to display PageBuilder",
          "type": "string"
        },
        "description": {
          "description": "Description of form tab. Example: 'Server administration configuration'",
          "type": "string"
        },
        "required": {
          "description": "list mandatory configuration field",
          "$ref": "http://json-schema.org/draft-06/schema#/definitions/stringArray"
        },
        "properties": {
          "minProperties": 1,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UIProperty"
          }
        }
      },
      "additionalProperties": false
    },
    "UISchema": {
      "title": "UISchema declaration",
      "description": "Specify in UISchema format how the parameters should be rendered in PageBuilder.",
      "type": "object",
      "properties": {
        "sections": {
          "type": "array",
          "description": "list of configuration set contract. Allows configuration to be consolidated by interest",
          "items": { "$ref": "#/definitions/UISection" },
          "default": []
        }
      },
      "additionalProperties": false
    },
    "BlockProviderConfig": {
      "definitions": {},
      "$schema": "http://json-schema.org/draft-06/schema#",
      "$id": "BlockProviderConfig",
      "type": "array",
      "title": "BlockProviderConfig",
      "description": "BlockProvider response format to declare BlockConfig",
      "items": {
        "type": "object",
        "$ref": "BlockConfig"
      },
      "uniqueItems": true,
      "minItems": 1
    },
    "ConfigMap": {
      "definitions": {},
      "$schema": "http://json-schema.org/draft-06/schema",
      "$id": "ConfigMap",
      "type": "object",
      "title": "ConfigMap",
      "description": "Key/Value dataset",
      "maxProperties": 1024,
      "additionalProperties": true
    }
  }
}
